<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAdd.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DwAACw8BkvkDpQAAA5FJREFUeF7tmk9rnFUUh+/XMHahdtJJJrRKpWKxaMViTZuoVCr+oVJpO2k62kXF
        Nl0ogkGRQgVBQaSYhejCWk1rE5t0kpJJxJUrN10Vmk9Q46arx3vSE3zhMAycmQu38j7wEJ4zMPzCDGQC
        E0pKSkpKSkpKOtH3LqOb3mFxU4N/4k+yVLY1WOhrMKKze8NDJ/gkyn3mpM7vjso4o5vH4ZFx7kZPVxv0
        6UPZIdvixjOyVTY/fLwH74QtdRarYxB/ntFT9sStE7K5WqepJz9Dx1gbqsNAnQekB8fYV6uzKreclE2D
        xxiWjbJV739Ld8W2oyBqhm1HWN24ZehtnWl2u9l+BERN07mQbOeOt0HUNJ0LyXbuPAyipulcSLZz11sg
        aprOhWQ7dx8CUdN0LiTbuedNEDVN50KynXvfAFHTdC4k27n/NRA1TedCsp0vvgqipmkv7/3OSpR1V2jp
        2U2qneHAQRA1TXuZWIaienaTamc4+AqImqa9fNiConp2k2pneP0AiJqmvUwuQVE9u0m1Mxx6GURN014+
        uwFF9ewm1c5w+CUQNU17+XwRiurZTaqd4egoiJqmvXy5AEX17CbVzjA2AqKmaS/fXIeienaTamdo7ANR
        03Q7puZYmZqHXvjtfOfPCd6dHTk5DKKm6XZ8Pwe9VJ+2Ld6dHTm1F0RN0+24eA16qT5tW7w7O/L+8yBq
        mm7HL7O0pmehJ86wpE/bFu/OjpzdA6KmaS+zM1BUz25S7QwfPAeipmkvzatQVM9uUu0MHz0LoqZpL0tX
        oKie3aTaGSafiZ/Vo5qmvfxxGYrq2U2qneHTp0HUNO3lz2koqmc3qXaGc7tA1DTt5a+foaie3aTaGc4/
        BaKmaS83L0FRPbtJtTN8sRNETdNebl2kdesnUDv+ne9Eqp3hqydB1DSdC8l2fv0EiJqmcyHZzgs7QNQ0
        nQvJdk49Hv8ljWqazoVkO7/bDqKm6VxItvOHx0DUNJ0LyXb++CiImqZzIdnOS1tB1DSdC8l2Xh4CUTNM
        11jduGVn7b8vSW3cNP1cHWRtpgZz1XtfkIw9HL0tt5yUTb/WeEE2XunnwfVbjTvSXXFtgIUovw0woafs
        iXvP6ubuvyg5P8BIswrNLdyNTmy8E3Lkenzlm/GXX98aNy/0s18f6o7FCpM3+uG+ssLHOr83LFUYaVVo
        Lm9mbbkCWRq3ycaVXr3yJSUlJSUlJf9jQvgXFyT+ec6UIVoAAAAASUVORK5CYII=
</value>
  </data>
</root>